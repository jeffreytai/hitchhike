<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
  <title>HitchHike</title>

  <%= stylesheet_link_tag "bootstrap.min" %>

  <style>
      html, body {
          height: 90%;
          width: 90%;
          margin: auto;
          padding: 0;
      }
      #map {
          height: 100%;
      }
      .controls {
          margin-top: 10px;
          border: 1px solid transparent;
          border-radius: 2px 0 0 2px;
          box-sizing: border-box;
          -moz-box-sizing: border-box;
          height: 32px;
          outline: none;
          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }
      #pac-input {
          background-color: #fff;
          font-family: Roboto;
          font-size: 15px;
          font-weight: 300;
          margin-left: 12px;
          padding: 0 11px 0 13px;
          text-overflow: ellipsis;
          width: 300px;
      }
      #pac-input:focus {
          border-color: #4d90fe;
      }
      .pac-container {
          font-family: Roboto;
      }
      #type-selector {
          color: #fff;
          background-color: #4d90fe;
          padding: 5px 11px 0px 11px;
      }
      #type-selector label {
          font-family: Roboto;
          font-size: 13px;
          font-weight: 300;
      }
  </style>
</head>

<body>

  <br/><br/><br/><br/><br/>

    <div id="map"></div>

    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: <%= @locations.first.lat %>, lng: <%= @locations.first.lng %>},
                zoom: 13
            });

            setMarkers(map);

            // getDirections(map);
        }

        var locations = [];
        <% @locations.each do |loc| %>
          locations.push([<%= loc.lat %>, <%= loc.lng %>]);
        <% end %>

        function setMarkers(map) {
          // changes bounds of map to fit all locations
          var bounds = new google.maps.LatLngBounds();
          var roadtrip = [];


          for (var i = 0; i < locations.length; i++) {
            var location = locations[i];
            var marker = new google.maps.Marker({
              position: {lat: location[0], lng: location[1]},
              map: map
            });
            bounds.extend(marker.getPosition());

            // roadtrip[i] = {lat: location[0], lng: location[1]};
          }

          map.fitBounds(bounds);

          // draws a path in between the locations
          // var path = new google.maps.Polyline({
          //   path: roadtrip,
          //   geodesic: true,
          //   strokeColor: '#FF0000',
          //   strokeOpacity: 1.0,
          //   strokeWeight: 2
          // });

          // path.setMap(map);

          var directionsService = new google.maps.DirectionsService;
          var directionsDisplay = new google.maps.DirectionsRenderer;
          directionsDisplay.setMap(map);

          calculateAndDisplayRoute(directionsService, directionsDisplay);
        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay) {
          directionsService.route({
            origin: {lat: <%= @locations.first.lat %>, lng: <%= @locations.first.lng %>},
            destination: "Seattle, WA",
            waypoints: [
              {
                location: "San Francisco, CA",
                stopover: true
              }
            ],
            optimizeWaypoints: true,
            provideRouteAlternatives: false,
            travelMode: google.maps.TravelMode.DRIVING
          }, function(response, status) {
            if (status === google.maps.DirectionsStatus.OK) {
              directionsDisplay.setDirections(response);
            } else {
              window.alert('Directions request failed due to ' + status);
            }
          });
        }


    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAC9HnSYF-HpEvHgLv4n04HupRWtp5n3h0&signed_in=true&libraries=places&callback=initMap"
            async defer></script>

    <p>
      <strong>Title:</strong>
      <%= @trip.title %>
    </p>

    <p>
      <strong>Description:</strong>
      <%= @trip.description %>
    </p>

    <p>
      <strong>Locations:</strong>
      <% @locations.each do |loc| %>
        <%= loc.name %>,
      <% end %>
    </p>

    <p>
      <strong>Tags:</strong>
      <%= @trip.tags %>
    </p>

    <p>
      <strong>Created Date:</strong>
      <%= @trip.postdate %>
    </p>

    <p>
      <strong>User:</strong>
      <%= @owner.username %>
    </p>

    <h2>Comments</h2>
    <div id="comments">
      <%= render :partial => @trip.comments %>
    </div>
    <%= form_for [@trip, Comment.new] do |f| %>
        <p>
          <%= f.label :body, "New comment" %><br/>
          <%= f.text_area :body %>
        </p>
        <p><%= f.submit "Add comment" %></p>
    <% end %>
    <%= link_to 'Edit', edit_trip_path(@trip) %> |
    <%= link_to 'Back', trips_path %>

  <!-- </div> -->

</body>
</html>
